diff -N -C3 -r less-443/ch.c less-443+ebcdic/ch.c
*** less-443/ch.c	2011-04-10 08:20:04.000000000 +1000
--- less-443+ebcdic/ch.c	2011-05-31 11:37:56.000000000 +1000
***************
*** 140,145 ****
--- 140,147 ----
  
  static int ch_addbuf();
  
+ extern int ebcdic_conv;
+ void ebcdic_to_ascii(char *buf, int sz);
  
  /*
   * Get the character pointed to by the read pointer.
***************
*** 266,271 ****
--- 268,275 ----
  	{
  		n = iread(ch_file, &bp->data[bp->datasize], 
  			(unsigned int)(LBUFSIZE - bp->datasize));
+ 		if (ebcdic_conv && n > 0)
+ 			ebcdic_to_ascii(bp->data + bp->datasize, n);
  	}
  
  	if (n == READ_INTR)
***************
*** 931,933 ****
--- 935,980 ----
  	}
  }
  #endif
+ 
+ static const char ebcdic_to_ascii_tab[256] = {
+ 	'\x00', '\x01', '\x02', '\x03', '\x9c', '\x09', '\x86', '\x7f',
+ 	'\x97', '\x8d', '\x8e', '\x0b', '\x0c', '\x0d', '\x0e', '\x0f',
+ 	'\x10', '\x11', '\x12', '\x13', '\x9d', '\x85', '\x08', '\x87',
+ 	'\x18', '\x19', '\x92', '\x8f', '\x1c', '\x1d', '\x1e', '\x1f',
+ 	'\x80', '\x81', '\x82', '\x83', '\x84', '\x0a', '\x17', '\x1b',
+ 	'\x88', '\x89', '\x8a', '\x8b', '\x8c', '\x05', '\x06', '\x07',
+ 	'\x90', '\x91', '\x16', '\x93', '\x94', '\x95', '\x96', '\x04',
+ 	'\x98', '\x99', '\x9a', '\x9b', '\x14', '\x15', '\x9e', '\x1a',
+ 	'\x20', '\xa0', '\xe2', '\xe4', '\xe0', '\xe1', '\xe3', '\xe5',
+ 	'\xe7', '\xf1', '\xa2', '\x2e', '\x3c', '\x28', '\x2b', '\x7c',
+ 	'\x26', '\xe9', '\xea', '\xeb', '\xe8', '\xed', '\xee', '\xef',
+ 	'\xec', '\xdf', '\x21', '\x24', '\x2a', '\x29', '\x3b', '\xac',
+ 	'\x2d', '\x2f', '\xc2', '\xc4', '\xc0', '\xc1', '\xc3', '\xc5',
+ 	'\xc7', '\xd1', '\xa6', '\x2c', '\x25', '\x5f', '\x3e', '\x3f',
+ 	'\xf8', '\xc9', '\xca', '\xcb', '\xc8', '\xcd', '\xce', '\xcf',
+ 	'\xcc', '\x60', '\x3a', '\x23', '\x40', '\x27', '\x3d', '\x22',
+ 	'\xd8', '\x61', '\x62', '\x63', '\x64', '\x65', '\x66', '\x67',
+ 	'\x68', '\x69', '\xab', '\xbb', '\xf0', '\xfd', '\xfe', '\xb1',
+ 	'\xb0', '\x6a', '\x6b', '\x6c', '\x6d', '\x6e', '\x6f', '\x70',
+ 	'\x71', '\x72', '\xaa', '\xba', '\xe6', '\xb8', '\xc6', '\xa4',
+ 	'\xb5', '\x7e', '\x73', '\x74', '\x75', '\x76', '\x77', '\x78',
+ 	'\x79', '\x7a', '\xa1', '\xbf', '\xd0', '\xdd', '\xde', '\xae',
+ 	'\x5e', '\xa3', '\xa5', '\xb7', '\xa9', '\xa7', '\xb6', '\xbc',
+ 	'\xbd', '\xbe', '\x5b', '\x5d', '\xaf', '\xa8', '\xb4', '\xd7',
+ 	'\x7b', '\x41', '\x42', '\x43', '\x44', '\x45', '\x46', '\x47',
+ 	'\x48', '\x49', '\xad', '\xf4', '\xf6', '\xf2', '\xf3', '\xf5',
+ 	'\x7d', '\x4a', '\x4b', '\x4c', '\x4d', '\x4e', '\x4f', '\x50',
+ 	'\x51', '\x52', '\xb9', '\xfb', '\xfc', '\xf9', '\xfa', '\xff',
+ 	'\x5c', '\xf7', '\x53', '\x54', '\x55', '\x56', '\x57', '\x58',
+ 	'\x59', '\x5a', '\xb2', '\xd4', '\xd6', '\xd2', '\xd3', '\xd5',
+ 	'\x30', '\x31', '\x32', '\x33', '\x34', '\x35', '\x36', '\x37',
+ 	'\x38', '\x39', '\xb3', '\xdb', '\xdc', '\xd9', '\xda', '\x9f',
+ };
+ 
+ 	void
+ ebcdic_to_ascii(char *buf, int sz)
+ {
+ 	register int i;
+ 	for (i = 0; i < sz; i++, buf++)
+ 		*buf = ebcdic_to_ascii_tab[(unsigned char)*buf];
+ }
diff -N -C3 -r less-443/charset.c less-443+ebcdic/charset.c
*** less-443/charset.c	2011-04-10 08:20:04.000000000 +1000
--- less-443+ebcdic/charset.c	2011-05-31 11:37:56.000000000 +1000
***************
*** 18,25 ****
--- 18,27 ----
  #if HAVE_LOCALE
  #include <locale.h>
  #include <ctype.h>
+ #ifndef WIN32
  #include <langinfo.h>
  #endif
+ #endif
  
  #include "charset.h"
  
***************
*** 114,120 ****
  static char *binfmt = NULL;
  static char *utfbinfmt = NULL;
  public int binattr = AT_STANDOUT;
! 
  
  /*
   * Define a charset, given a description string.
--- 116,122 ----
  static char *binfmt = NULL;
  static char *utfbinfmt = NULL;
  public int binattr = AT_STANDOUT;
! public int has_binary_char = 0;
  
  /*
   * Define a charset, given a description string.
***************
*** 300,306 ****
   *
   */
  	static void
! set_charset()
  {
  	char *s;
  
--- 302,308 ----
   *
   */
  	static void
! set_charset_org()
  {
  	char *s;
  
***************
*** 367,372 ****
--- 369,391 ----
  #endif
  }
  
+ 	static void
+ set_charset()
+ {
+ 	register int i;
+ 
+ 	set_charset_org();
+ 
+ 	for (i = 0; i < (int) sizeof(chardef); i++)
+ 	{
+ 		if (chardef[i] & IS_BINARY_CHAR)
+ 		{
+ 			has_binary_char = 1;
+ 			break;
+ 		}
+ 	}
+ }
+ 
  /*
   * Initialize charset data structures.
   */
diff -N -C3 -r less-443/defines.wn less-443+ebcdic/defines.wn
*** less-443/defines.wn	2011-04-10 15:59:14.000000000 +1000
--- less-443+ebcdic/defines.wn	2011-05-31 11:37:56.000000000 +1000
***************
*** 235,241 ****
  #define MUST_DEFINE_OSPEED 0
  
  /* Define HAVE_LOCALE if you have locale.h and setlocale. */
! #define HAVE_LOCALE 0
  
  /* Define HAVE_TERMIOS_FUNCS if you have tcgetattr/tcsetattr */
  #define HAVE_TERMIOS_FUNCS 0
--- 235,241 ----
  #define MUST_DEFINE_OSPEED 0
  
  /* Define HAVE_LOCALE if you have locale.h and setlocale. */
! #define HAVE_LOCALE 1
  
  /* Define HAVE_TERMIOS_FUNCS if you have tcgetattr/tcsetattr */
  #define HAVE_TERMIOS_FUNCS 0
diff -N -C3 -r less-443/edit.c less-443+ebcdic/edit.c
*** less-443/edit.c	2011-04-10 08:20:05.000000000 +1000
--- less-443+ebcdic/edit.c	2011-05-31 11:37:56.000000000 +1000
***************
*** 32,37 ****
--- 32,38 ----
  extern char openquote;
  extern char closequote;
  #endif
+ extern int ebcdic_conv; 
  
  #if LOGFILE
  extern int logfile;
***************
*** 355,373 ****
  	} else 
  	{
  		chflags |= CH_CANSEEK;
! 		if (!force_open && !opened(ifile) && bin_file(f))
  		{
! 			/*
! 			 * Looks like a binary file.  
! 			 * Ask user if we should proceed.
! 			 */
! 			parg.p_string = filename;
! 			answer = query("\"%s\" may be a binary file.  See it anyway? ",
! 				&parg);
! 			if (answer != 'y' && answer != 'Y')
  			{
! 				close(f);
! 				goto err1;
  			}
  		}
  	}
--- 356,410 ----
  	} else 
  	{
  		chflags |= CH_CANSEEK;
! 		if (!force_open && !opened(ifile))
  		{
! 			int b = bin_file(f);
! 			if (b == -1)
! 			{
! 				/* Cannot detect, nothing to do */
! 			}
! 			else if (b == 1)
! 			{
! 				/*
! 				 * Looks like a binary file.
! 				 * Ask user if we should proceed.
! 				 */
! 				parg.p_string = filename;
! 				answer = query("\"%s\" may be a binary file.  See it anyway? ",
! 					&parg);
! 				if (answer != 'y' && answer != 'Y')
! 				{
! 					close(f);
! 					goto err1;
! 				}
! 			}
! 			else if (b == 2 && !ebcdic_conv)
! 			{
! 				/*
! 				 * Looks like an EBCDIC file.
! 				 * Ask user if we should proceed with EBCDIC->ASCII conversion.
! 				 */
! 				parg.p_string = filename;
! 				answer = query("\"%s\" may be an EBCDIC file.  See it with conversion to ASCII? ",
! 					&parg);
! 				if (answer == 'y' || answer == 'Y')
! 				{
! 					ebcdic_conv = OPT_ON;
! 				}
! 			}
! 			else if (b == 0 && ebcdic_conv)
  			{
! 				/*
! 				 * Looks like an ASCII file but requested for EBCDIC->ASCII conversion.
! 				 * Ask user if we should proceed without conversion.
! 				 */
! 				parg.p_string = filename;
! 				answer = query("\"%s\" may be an ASCII file.  See it without conversion from EBCDIC? ",
! 					&parg);
! 				if (answer == 'y' || answer == 'Y')
! 				{
! 					ebcdic_conv = OPT_OFF;
! 				}
  			}
  		}
  	}
diff -N -C3 -r less-443/filename.c less-443+ebcdic/filename.c
*** less-443/filename.c	2011-04-10 08:20:05.000000000 +1000
--- less-443+ebcdic/filename.c	2011-05-31 11:37:56.000000000 +1000
***************
*** 59,64 ****
--- 59,67 ----
  extern char openquote;
  extern char closequote;
  #endif
+ extern int has_binary_char;
+ 
+ extern void ebcdic_to_ascii(char *buf, int sz);
  
  /*
   * Remove quotes around a filename.
***************
*** 463,488 ****
  }
  #endif
  
! /*
!  * Try to determine if a file is "binary".
!  * This is just a guess, and we need not try too hard to make it accurate.
!  */
! 	public int
! bin_file(f)
! 	int f;
! {
  	int n;
! 	int bin_count = 0;
! 	char data[256];
  	char* p;
! 	char* pend;
! 
! 	if (!seekable(f))
! 		return (0);
! 	if (lseek(f, (off_t)0, SEEK_SET) == BAD_LSEEK)
! 		return (0);
! 	n = read(f, data, sizeof(data));
! 	pend = &data[n];
  	for (p = data;  p < pend;  )
  	{
  		LWCHAR c = step_char(&p, +1, pend);
--- 466,481 ----
  }
  #endif
  
! 	static int
! text_score(data, n, ts)
! 	char *data;
  	int n;
! 	int *ts;
! {
! 	register int s = 0;
! 	register int s2 = 0;
  	char* p;
! 	char* pend = &data[n];
  	for (p = data;  p < pend;  )
  	{
  		LWCHAR c = step_char(&p, +1, pend);
***************
*** 491,504 ****
  			do {
  				c = step_char(&p, +1, pend);
  			} while (p < pend && is_ansi_middle(c));
! 		} else if (binary_char(c))
! 			bin_count++;
  	}
  	/*
! 	 * Call it a binary file if there are more than 5 binary characters
! 	 * in the first 256 bytes of the file.
! 	 */
! 	return (bin_count > 5);
  }
  
  /*
--- 484,538 ----
  			do {
  				c = step_char(&p, +1, pend);
  			} while (p < pend && is_ansi_middle(c));
! 		} else if (!binary_char(c))
! 		{
! 			s++;
! 			s2++;
! 			/* give higher score to lower range characters */
! 			if (!(c & ~0x7f)) s2++;
! 		}
  	}
+ 	*ts = s2;
+ 	return (s);
+ }
+ 
+ /*
+  * Try to determine if a file is "binary" or "ebcdic".
+  * This is just a guess, and we need not try too hard to make it accurate.
+  * return 0 - ascii text, 1 - binary, 2 - ebcdic text, -1 - not detected.
+  */
+ 	public int
+ bin_file(f)
+ 	int f;
+ {
  	/*
! 	*  Detection makes no sense if there is
! 	*  no defined binary character.
! 	*/
! 	if (has_binary_char)
! 	{
! 		int n;
! 		char data[256];
! 
! 		if (!seekable(f))
! 			return (0);
! 		if (lseek(f, (off_t)0, 0) == BAD_LSEEK)
! 			return (0);
! 		n = read(f, data, sizeof(data));
! 		if (n > 0)
! 		{
! 			int l = n - (n/10);
! 			int as, as2, es, es2;
! 			as = text_score(data, n, &as2);
! 			ebcdic_to_ascii(data, n);
! 			es = text_score(data, n, &es2);
! 			if (as < l && es < l) return (1);
! 			/* favour ascii over ebcdic */
! 			return (as2 >= es2) ? (0) : (2);
! 		}
! 		return (0);
! 	}
! 	return (-1);
  }
  
  /*
***************
*** 563,569 ****
  
  #if HAVE_POPEN
  
! FILE *popen();
  
  /*
   * Execute a shell command.
--- 597,603 ----
  
  #if HAVE_POPEN
  
! FILE *popen(const char*, const char*);
  
  /*
   * Execute a shell command.
diff -N -C3 -r less-443/help.c less-443+ebcdic/help.c
*** less-443/help.c	2011-01-02 10:17:32.000000000 +1100
--- less-443+ebcdic/help.c	2011-05-31 11:37:56.000000000 +1000
***************
*** 201,206 ****
--- 201,208 ----
  ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','D','o','n','\'','t',' ','d','i','s','p','l','a','y',' ','t','i','l','d','e','s',' ','a','f','t','e','r',' ','e','n','d',' ','o','f',' ','f','i','l','e','.','\n',
  ' ',' ','-','#',' ','[','_','\b','N',']',' ',' ','.','.','.','.',' ',' ','-','-','s','h','i','f','t','=','[','_','\b','N',']','\n',
  ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','H','o','r','i','z','o','n','t','a','l',' ','s','c','r','o','l','l',' ','a','m','o','u','n','t',' ','(','0',' ','=',' ','o','n','e',' ','h','a','l','f',' ','s','c','r','e','e','n',' ','w','i','d','t','h',')','\n',
+ ' ',' ','-','%',' ',' ','.','.','.','.','.','.','.','.',' ',' ','-','-','e','b','c','d','i','c','\n',
+ ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','E','n','a','b','l','e',' ','b','a','s','i','c',' ','E','B','C','D','I','C',' ','t','o',' ','A','S','C','I','I',' ','c','o','n','v','e','r','s','i','o','n','.','\n',
  ' ',' ',' ',' ',' ',' ','.','.','.','.','.','.','.','.',' ',' ','-','-','n','o','-','k','e','y','p','a','d','\n',
  ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','D','o','n','\'','t',' ','s','e','n','d',' ','k','e','y','p','a','d',' ','i','n','i','t','/','d','e','i','n','i','t',' ','s','e','q','u','e','n','c','e','.','\n',
  ' ',' ',' ',' ',' ',' ','.','.','.','.','.','.','.','.',' ',' ','-','-','f','o','l','l','o','w','-','n','a','m','e','\n',
diff -N -C3 -r less-443/less.hlp less-443+ebcdic/less.hlp
*** less-443/less.hlp	2011-04-10 16:02:57.000000000 +1000
--- less-443+ebcdic/less.hlp	2011-05-31 11:37:56.000000000 +1000
***************
*** 198,203 ****
--- 198,205 ----
                    Don't display tildes after end of file.
    -# [_N]  ....  --shift=[_N]
                    Horizontal scroll amount (0 = one half screen width)
+   -%  ........  --ebcdic
+                   Enable basic EBCDIC to ASCII conversion.
        ........  --no-keypad
                    Don't send keypad init/deinit sequence.
        ........  --follow-name
diff -N -C3 -r less-443/main.c less-443+ebcdic/main.c
*** less-443/main.c	2011-04-10 08:20:05.000000000 +1000
--- less-443+ebcdic/main.c	2011-05-31 11:37:56.000000000 +1000
***************
*** 54,65 ****
--- 54,71 ----
  static char consoleTitle[256];
  #endif
  
+ extern int	ebcdic_conv;
  extern int	less_is_more;
  extern int	missing_cap;
  extern int	know_dumb;
  extern int	quit_if_one_screen;
  extern int	pr_type;
  
+ static const char *filebase(const char *fn);
+ 
+ #if MSDOS_COMPILER
+ #define strncasecmp(s1,s2,n) strnicmp(s1,s2,n)
+ #endif
  
  /*
   * Entry point.
***************
*** 71,76 ****
--- 77,83 ----
  {
  	IFILE ifile;
  	char *s;
+ 	const char *progbase;
  
  #ifdef __EMX__
  	_response(&argc, &argv);
***************
*** 120,125 ****
--- 127,137 ----
  	init_option();
  	init_search();
  
+ 	progbase = filebase(progname);
+ 	if (strncasecmp(progbase, "eless", 5) == 0
+ 		&& (progbase[5] == '.' || progbase[5] == '\0'))
+ 		ebcdic_conv = OPT_ON;
+ 
  	/*
  	 * If the name of the executable program is "more",
  	 * act like LESS_IS_MORE is set.
***************
*** 412,414 ****
--- 424,438 ----
  	close_getchr();
  	exit(status);
  }
+ 
+ static const char *
+ filebase(const char *fn)
+ {
+ 	register size_t l = strlen(fn);
+ 	register const char *cp = fn + l - 1;
+ 	while (l > 0 && *cp != '\\' && *cp != '/')
+ 	{
+ 		l--; cp--;
+ 	}
+ 	return cp+1;
+ }
diff -N -C3 -r less-443/Makefile.wnm less-443+ebcdic/Makefile.wnm
*** less-443/Makefile.wnm	2011-04-10 15:59:49.000000000 +1000
--- less-443+ebcdic/Makefile.wnm	2011-05-31 11:37:56.000000000 +1000
***************
*** 6,12 ****
  CC = cl
  
  # Normal flags
! CFLAGS = /nologo /ML /W3 /GX /O2 /I "." /D "WIN32" /D "NDEBUG" /D "_CONSOLE" /c
  LDFLAGS = /nologo /subsystem:console /incremental:no /machine:I386
  
  # Debugging flags
--- 6,12 ----
  CC = cl
  
  # Normal flags
! CFLAGS = /nologo /MD /W3 /GX /Ox /I "." /D "WIN32" /D "NDEBUG" /D "_CONSOLE" /c
  LDFLAGS = /nologo /subsystem:console /incremental:no /machine:I386
  
  # Debugging flags
***************
*** 31,37 ****
  	output.obj pattern.obj position.obj prompt.obj search.obj signal.obj \
  	tags.obj ttyin.obj version.obj regexp.obj
  
! all: less.exe lesskey.exe
  
  # This is really horrible, but the command line is too long for 
  # MS-DOS if we try to link ${OBJ}.
--- 31,37 ----
  	output.obj pattern.obj position.obj prompt.obj search.obj signal.obj \
  	tags.obj ttyin.obj version.obj regexp.obj
  
! all: less.exe lesskey.exe lessecho.exe
  
  # This is really horrible, but the command line is too long for 
  # MS-DOS if we try to link ${OBJ}.
***************
*** 42,47 ****
--- 42,50 ----
  lesskey.exe: lesskey.obj version.obj
  	$(LD) $(LDFLAGS) lesskey.obj version.obj $(LIBS) /out:$@
  
+ lessecho.exe: lessecho.obj version.obj
+ 	$(LD) $(LDFLAGS) lessecho.obj version.obj $(LIBS) /out:$@
+ 
  defines.h: defines.wn
  	-del defines.h
  	-copy defines.wn defines.h
***************
*** 52,56 ****
--- 55,60 ----
  	-del *.obj 
  	-del less.exe
  	-del lesskey.exe
+ 	-del lessecho.exe
  
  
diff -N -C3 -r less-443/Makefile.wnm.vs2008 less-443+ebcdic/Makefile.wnm.vs2008
*** less-443/Makefile.wnm.vs2008	1970-01-01 10:00:00.000000000 +1000
--- less-443+ebcdic/Makefile.wnm.vs2008	2011-05-31 11:37:56.000000000 +1000
***************
*** 0 ****
--- 1,66 ----
+ # Makefile for less.
+ # Windows 32 Visual C++ version
+ 
+ #### Start of system configuration section. ####
+ 
+ CC = cl
+ 
+ # Normal flags
+ CFLAGS = /nologo /MD /W3 /EHsc /Ox /I "." /D "WIN32" /D "NDEBUG" /D "_CONSOLE" /D _CRT_SECURE_NO_WARNINGS /c
+ LDFLAGS = /nologo /subsystem:console /incremental:no /machine:I386
+ 
+ # Debugging flags
+ #CFLAGS = /nologo /MDd /W3 /GX /Od /Gm /Zi /I "." /D "WIN32" /D "NDEBUG" /D "_CONSOLE" /c
+ #LDFLAGS = /nologo /subsystem:console /incremental:yes /debug /machine:I386
+ 
+ LD = link
+ LIBS = user32.lib
+ 
+ MT = mt
+ 
+ #### End of system configuration section. ####
+ 
+ # This rule allows us to supply the necessary -D options
+ # in addition to whatever the user asks for.
+ .c.obj:
+ 	$(CC) $(CFLAGS) $<
+ 
+ OBJ = \
+ 	main.obj screen.obj brac.obj ch.obj charset.obj cmdbuf.obj \
+ 	command.obj cvt.obj decode.obj edit.obj filename.obj forwback.obj \
+ 	help.obj ifile.obj input.obj jump.obj line.obj linenum.obj \
+ 	lsystem.obj mark.obj optfunc.obj option.obj opttbl.obj os.obj \
+ 	output.obj pattern.obj position.obj prompt.obj search.obj signal.obj \
+ 	tags.obj ttyin.obj version.obj regexp.obj
+ 
+ all: less.exe lesskey.exe lessecho.exe
+ 
+ # This is really horrible, but the command line is too long for 
+ # MS-DOS if we try to link ${OBJ}.
+ less.exe: $(OBJ)
+ 	-del lesskey.obj
+ 	$(LD) $(LDFLAGS) *.obj $(LIBS) /out:$@
+ 	$(MT) -manifest $@.manifest -outputresource:$@;1
+ 
+ lesskey.exe: lesskey.obj version.obj
+ 	$(LD) $(LDFLAGS) lesskey.obj version.obj $(LIBS) /out:$@
+ 	$(MT) -manifest $@.manifest -outputresource:$@;1
+ 
+ lessecho.exe: lessecho.obj version.obj
+ 	$(LD) $(LDFLAGS) lessecho.obj version.obj $(LIBS) /out:$@
+ 	$(MT) -manifest $@.manifest -outputresource:$@;1
+ 
+ defines.h: defines.wn
+ 	-del defines.h
+ 	-copy defines.wn defines.h
+ 
+ $(OBJ): less.h defines.h funcs.h cmd.h
+ 
+ clean:
+ 	-del *.obj 
+ 	-del *.manifest
+ 	-del less.exe
+ 	-del lesskey.exe
+ 	-del lessecho.exe
+ 
+ 
diff -N -C3 -r less-443/opttbl.c less-443+ebcdic/opttbl.c
*** less-443/opttbl.c	2011-04-10 08:20:05.000000000 +1000
--- less-443+ebcdic/opttbl.c	2011-05-31 11:37:56.000000000 +1000
***************
*** 56,61 ****
--- 56,62 ----
  #if HILITE_SEARCH
  public int hilite_search;	/* Highlight matched search patterns? */
  #endif
+ public int ebcdic_conv;		/* Basic EBCDIC to ASCII conversion */
  
  public int less_is_more = 0;	/* Make compatible with POSIX more */
  
***************
*** 113,118 ****
--- 114,120 ----
  static struct optname tilde_optname  = { "tilde",                NULL };
  static struct optname query_optname  = { "help",                 NULL };
  static struct optname pound_optname  = { "shift",                NULL };
+ static struct optname perc_optname   = { "ebcdic",               NULL };
  static struct optname keypad_optname = { "no-keypad",            NULL };
  static struct optname oldbot_optname = { "old-bot",              NULL };
  static struct optname follow_optname = { "follow-name",          NULL };
***************
*** 140,146 ****
  			"Search includes all of displayed screen"
  		}
  	},
- 
  	{ 'b', &b_optname,
  		NUMBER|INIT_HANDLER, 64, &bufspace, opt_b, 
  		{
--- 142,147 ----
***************
*** 427,432 ****
--- 428,441 ----
  			NULL
  		}
  	},
+ 	{ '%', &perc_optname,
+ 		BOOL, OPT_OFF, &ebcdic_conv, NULL,
+ 		{
+ 			"Enable basic EBCDIC to ASCII conversion",
+ 			"Disable basic EBCDIC to ASCII conversion",
+ 			NULL
+ 		}
+ 	},
  	{ OLETTER_NONE, &keypad_optname,
  		BOOL|NO_TOGGLE, OPT_OFF, &no_keypad, NULL,
  		{
diff -N -C3 -r less-443/version.c less-443+ebcdic/version.c
*** less-443/version.c	2011-04-10 16:02:11.000000000 +1000
--- less-443+ebcdic/version.c	2011-05-31 11:37:56.000000000 +1000
***************
*** 744,747 ****
  v443  4/9/11    Fix Windows build.
  */
  
! char version[] = "443";
--- 744,747 ----
  v443  4/9/11    Fix Windows build.
  */
  
! char version[] = "443+ebcdic";
